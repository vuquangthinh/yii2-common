<?php
/**
 * Created by PhpStorm.
 * User: quangthinh
 * Date: 7/18/2016
 * Time: 4:45 PM
 */

namespace quangthinh\yii\common\behaviors;


use Ramsey\Uuid\Uuid;
use Yii;
use yii\base\Behavior;
use yii\base\Event;
use yii\base\Model;
use yii\behaviors\AttributeBehavior;
use yii\db\BaseActiveRecord;
use yii\validators\UniqueValidator;

/**
 * Class UuidBehavior
 * @package quangthinh\yii\common\behaviors
 *
 * Uuid Behavior for ID, Validator
 */
class UuidBehavior extends AttributeBehavior
{
    public $version = 'uuid4';
    public $params = [];
    public $attributes = ['id'];

    /**
     * @inheritdoc
     */
    public function init()
    {
        parent::init();

        $this->attributes = [
            BaseActiveRecord::EVENT_BEFORE_INSERT => $this->attributes,
        ];
    }

    public function events()
    {
        $events = parent::events(); // TODO: Change the autogenerated stub
        $events[BaseActiveRecord::EVENT_BEFORE_VALIDATE] = 'onBeforeValidate';
        return $events;
    }

    /**
     * @param Event $event
     */
    public function onBeforeValidate($event)
    {
        foreach ($this->attributes[BaseActiveRecord::EVENT_BEFORE_INSERT] as $attribute) {
            /**
             * @var UniqueValidator $validate
             * @var Model $model
             */
            $model = $this->owner;
            $validate = Yii::createObject([
                'class' => UniqueValidator::className(),
                'targetClass' => get_class($model),
                'targetAttribute' => $attribute,
            ]);

            $validate->validateAttribute($model, $attribute);
        }
    }

    /**
     * @inheritdoc
     */
    protected function getValue($event)
    {
        if ($this->value === null) {
            return call_user_func_array(['\Ramsey\Uuid\Uuid', $this->version], $this->params);
        }

        return parent::getValue($event); // TODO: Change the autogenerated stub
    }
}